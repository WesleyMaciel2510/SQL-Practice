-- Create the ALUNOS table with columns id, name, email, and birth_date
CREATE TABLE ALUNOS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    data_nascimento DATE
);

-- Create the PROFESSORES table with columns id, name, email, and specialty
CREATE TABLE PROFESSORES (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    especialidade VARCHAR2(100)
);

-- Create the DISCIPLINAS table with columns id, name, and professor_id
CREATE TABLE DISCIPLINAS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    professor_id NUMBER,
    FOREIGN KEY (professor_id) REFERENCES PROFESSORES(id)
);

-- Create a table to link students and disciplines
CREATE TABLE ALUNOS_DISCIPLINAS (
    aluno_id NUMBER,
    disciplina_id NUMBER,
    FOREIGN KEY (aluno_id) REFERENCES ALUNOS(id),
    FOREIGN KEY (disciplina_id) REFERENCES DISCIPLINAS(id),
    PRIMARY KEY (aluno_id, disciplina_id)
);
-------------------------------------------------------------------------------------------------------------------------------------
-- Insert data into the ALUNOS table
INSERT INTO ALUNOS (nome, email, data_nascimento) VALUES ('Maria Julia Nascimento', 'maria.julia@example.com', DATE '1995-07-21');
INSERT INTO ALUNOS (nome, email, data_nascimento) VALUES ('Marcelo de Souza', 'marcelo.souza@example.com', DATE '1997-11-30');
INSERT INTO ALUNOS (nome, email, data_nascimento) VALUES ('Ana Santos', 'ana.santos@example.com', DATE '1996-03-15');

-- Insert data into the PROFESSORES table
INSERT INTO PROFESSORES (nome, email, especialidade) VALUES ('Carlos Alberto', 'carlos.alberto@example.com', 'Banco de Dados');
INSERT INTO PROFESSORES (nome, email, especialidade) VALUES ('Fernanda de Freitas', 'fernanda.freitas@example.com', 'Programação');
INSERT INTO PROFESSORES (nome, email, especialidade) VALUES ('Rafael Costa Lima', 'rafael.lima@example.com', 'Engenharia de Software');

-- Insert data into the DISCIPLINAS table
INSERT INTO DISCIPLINAS (nome, professor_id) VALUES ('Banco de Dados', 1);
INSERT INTO DISCIPLINAS (nome, professor_id) VALUES ('Programação Orientada a Objetos', 2);
INSERT INTO DISCIPLINAS (nome, professor_id) VALUES ('Engenharia de Software', 3);

INSERT INTO ALUNOS_DISCIPLINAS (aluno_id, disciplina_id) VALUES (1, 1);  -- Maria Julia Nascimento to Database Management
INSERT INTO ALUNOS_DISCIPLINAS (aluno_id, disciplina_id) VALUES (2, 2);  -- Marcelo de Souza to Programming Fundamentals
INSERT INTO ALUNOS_DISCIPLINAS (aluno_id, disciplina_id) VALUES (3, 3);  -- Ana Santos to Software Engineering

-- Insert a new student named 'Lucas Pereira' with email and birth date
INSERT INTO ALUNOS (nome, email, data_nascimento) 
VALUES ('Lucas Pereira', 'lucas.pereira@example.com', DATE '1998-05-10');

-- Insert a new student named 'Julia Mendes' with email and birth date
INSERT INTO ALUNOS (nome, email, data_nascimento) 
VALUES ('Julia Mendes', 'julia.mendes@example.com', DATE '1999-08-22');

-- Insert a new professor named 'Mariana Duarte' with email and specialty
INSERT INTO PROFESSORES (nome, email, especialidade) 
VALUES ('Mariana Duarte', 'mariana.duarte@example.com', 'Data Science');

-- Insert a new professor named 'Pedro Gomes' with email and specialty
INSERT INTO PROFESSORES (nome, email, especialidade) 
VALUES ('Pedro Gomes', 'pedro.gomes@example.com', 'Networks');

-- Insert a new discipline named 'Machine Learning' taught by professor with id 1
INSERT INTO DISCIPLINAS (nome, professor_id) 
VALUES ('Machine Learning', 1);

-- Insert a new discipline named 'Cybersecurity' taught by professor with id 2
INSERT INTO DISCIPLINAS (nome, professor_id) 
VALUES ('Cybersecurity', 2);
-------------------------------------------------------------------------------------------------------------------------------------
-- SELECT DATA FROM CRATED TABLES
SELECT * FROM ALUNOS;
SELECT * FROM PROFESSORES;
SELECT * FROM DISCIPLINAS;

-- Select all disciplines and their associated professor names
SELECT DISCIPLINAS.nome AS Discipline, PROFESSORES.nome AS Professor
FROM DISCIPLINAS
JOIN PROFESSORES ON DISCIPLINAS.professor_id = PROFESSORES.id;

-- Select all students who were born after 1996-01-01
SELECT * FROM ALUNOS
WHERE data_nascimento > DATE '1996-01-01';

-- Select the names and emails of students with the name 'Ana'
SELECT nome, email FROM ALUNOS
WHERE nome = 'Ana';

-- Select all professors with the specialty 'Banco de Dados'
SELECT * FROM PROFESSORES
WHERE especialidade = 'Banco de Dados';

-- Select the names and emails of all professors
SELECT nome, email FROM PROFESSORES;

-- Select all disciplines taught by the professor with id 3
SELECT * FROM DISCIPLINAS
WHERE professor_id = 3;

-- Select the names of all disciplines
SELECT nome FROM DISCIPLINAS;

---------------------------------------------------------------------------------------------------------------------------
-- Update the email of a student with id 1
UPDATE ALUNOS
SET email = 'maria.nascimento21@gmail.com'
WHERE id = 1;
-- Update the email of the student named 'Ana Santos'
UPDATE ALUNOS
SET email = 'ana.santos2024@hotmail.com'
WHERE nome = 'Ana Santos';

-- Update the birth date of the student with id 3
UPDATE ALUNOS
SET data_nascimento = DATE '1996-04-15'
WHERE id = 3;

-- Update the specialty of the professor named 'Carlos Alberto'
UPDATE PROFESSORES
SET especialidade = 'Big Data'
WHERE nome = 'Carlos Alberto';

-- Update the email of the professor with id 2
UPDATE PROFESSORES
SET email = 'fernanda.lima2023@example.com'
WHERE id = 2;

-- Update the name of the discipline with id 1
UPDATE DISCIPLINAS
SET nome = 'Advanced Database'
WHERE id = 1;

-- Update the professor of the discipline named 'Cybersecurity' to professor with id 3
UPDATE DISCIPLINAS
SET professor_id = 3
WHERE nome = 'Cybersecurity';
---------------------------------------------------------------------------------------------------------------------------
-- Delete the discipline with id 2
DELETE FROM DISCIPLINAS
WHERE id = 2;

-- Delete the student with id 1
DELETE FROM ALUNOS
WHERE id = 3;

-- Delete all students with the name 'Marcelo Souza'
DELETE FROM ALUNOS
WHERE nome = 'Marcelo Souza';

-- Delete the professor with id 1
DELETE FROM PROFESSORES
WHERE id = 1;

-- Delete all professors with the specialty 'Engenharia de Software'
DELETE FROM PROFESSORES
WHERE especialidade = 'Engenharia de Software';

-- Delete the discipline with id 2
DELETE FROM DISCIPLINAS
WHERE id = 2;

-- Delete all disciplines taught by professor with id 1
DELETE FROM DISCIPLINAS
WHERE professor_id = 1;
---------------------------------------------------------------------------------------------------------------------------
-- INNER JOIN

-- Select students and their enrolled disciplines
SELECT ALUNOS.nome AS Student_Name, DISCIPLINAS.nome AS Discipline
FROM ALUNOS
INNER JOIN DISCIPLINAS ON ALUNOS.id = DISCIPLINAS.professor_id;

-- Select professors and the disciplines they teach
SELECT PROFESSORES.nome AS Professor_Name, DISCIPLINAS.nome AS Discipline
FROM PROFESSORES
INNER JOIN DISCIPLINAS ON PROFESSORES.id = DISCIPLINAS.professor_id;
---------------------------------------------------------------------------------------------------------------------------
-- LEFT JOIN

-- Select students and their disciplines, showing only students who have enrolled disciplines
SELECT ALUNOS.nome AS Student_Name, DISCIPLINAS.nome AS Discipline
FROM ALUNOS
LEFT JOIN DISCIPLINAS ON ALUNOS.id = DISCIPLINAS.professor_id
WHERE DISCIPLINAS.nome IS NOT NULL;

-- Select professors and their disciplines, showing only professors who are teaching disciplines
SELECT PROFESSORES.nome AS Professor_Name, DISCIPLINAS.nome AS Discipline
FROM PROFESSORES
LEFT JOIN DISCIPLINAS ON PROFESSORES.id = DISCIPLINAS.professor_id
WHERE DISCIPLINAS.nome IS NOT NULL;
---------------------------------------------------------------------------------------------------------------------------
-- RIGHT JOIN

-- Select disciplines and the associated professors, excluding disciplines without professors
SELECT DISCIPLINAS.nome AS Discipline, PROFESSORES.nome AS Professor_Name
FROM DISCIPLINAS
RIGHT JOIN PROFESSORES ON DISCIPLINAS.professor_id = PROFESSORES.id
WHERE DISCIPLINAS.nome IS NOT NULL;

-- Select disciplines and the associated students, excluding disciplines without enrolled students
SELECT DISCIPLINAS.nome AS Discipline, ALUNOS.nome AS Student_Name
FROM DISCIPLINAS
RIGHT JOIN ALUNOS ON DISCIPLINAS.professor_id = ALUNOS.id
WHERE ALUNOS.nome IS NOT NULL;
---------------------------------------------------------------------------------------------------------------------------
-- Alter ALUNOS table to add address and payment_up_to_date fields
ALTER TABLE ALUNOS
ADD (
    endereco VARCHAR2(255),  -- Address of the student
    pagamento_em_dia NUMBER(1)  -- 0 for false, 1 for true
);

-- Alter PROFESSORES table to add salary field
ALTER TABLE PROFESSORES
ADD (
    salario NUMBER(10, 2)  -- Salary of the professor
);
---------------------------------------------------------------------------------------------------------------------------
-- Create ALUNOS_DISCIPLINAS table to link students to disciplines with additional fields
CREATE TABLE ALUNOS_DISCIPLINAS (
    aluno_id NUMBER,
    disciplina_id NUMBER,
    nota NUMBER(3, 1),  -- Grade with decimal precision
    aprovado NUMBER(1),  -- 0 for false, 1 for true
    FOREIGN KEY (aluno_id) REFERENCES ALUNOS(id),
    FOREIGN KEY (disciplina_id) REFERENCES DISCIPLINAS(id),
    PRIMARY KEY (aluno_id, disciplina_id)
);
---------------------------------------------------------------------------------------------------------------------------
-- Insert data into ALUNOS table with new fields
INSERT INTO ALUNOS (id, nome, email, data_nascimento, endereco, pagamento_em_dia) VALUES 
(1, 'Maria Silva Nascimento', 'maria.nascimento21@gmail.com', TO_DATE('1995-07-21', 'YYYY-MM-DD'), 'Rua X, 100', 1),
(2, 'João Souza', 'joao.souza@example.com', TO_DATE('1997-11-30', 'YYYY-MM-DD'), 'Rua Y, 200', 0),
(4, 'Maria Julia Nascimento', 'maria.julia@example.com', TO_DATE('1995-07-21', 'YYYY-MM-DD'), 'Rua Z, 300', 1),
(5, 'Marcelo de Souza', 'marcelo.souza@example.com', TO_DATE('1997-11-30', 'YYYY-MM-DD'), 'Rua W, 400', 0),
(6, 'Ana Santos', 'ana.santos2024@hotmail.com', TO_DATE('1996-03-15', 'YYYY-MM-DD'), 'Rua V, 500', 1),
(7, 'Lucas Pereira', 'lucas.pereira@example.com', TO_DATE('1998-05-10', 'YYYY-MM-DD'), 'Rua U, 600', 1),
(8, 'Julia Mendes', 'julia.mendes@example.com', TO_DATE('1999-08-22', 'YYYY-MM-DD'), 'Rua T, 700', 0);
---------------------------------------------------------------------------------------------------------------------------
-- Insert data into PROFESSORES table with salary field, organized by ID starting from 1
INSERT INTO PROFESSORES (id, nome, email, especialidade, salario) VALUES 
(1, 'Carlos Alberto', 'carlos.alberto@example.com', 'Big Data', 8000.00),
(2, 'Fernanda Lima', 'fernanda.lima2023@example.com', 'Programação', 7500.00),
(3, 'Rafael Costa', 'rafael.costa@example.com', 'Engenharia de Software', 8500.00),
(4, 'Carlos Alberto', 'carlos.alberto@example.com', 'Big Data', 8000.00),
(5, 'Fernanda de Freitas', 'fernanda.freitas@example.com', 'Programação', 7500.00),
(6, 'Rafael Costa Lima', 'rafael.lima@example.com', 'Engenharia de Software', 8500.00),
(7, 'Mariana Duarte', 'mariana.duarte@example.com', 'Data Science', 9000.00),
(8, 'Pedro Gomes', 'pedro.gomes@example.com', 'Networks', 7000.00);
---------------------------------------------------------------------------------------------------------------------------
-- Important: Drop Table Command has risks, use with caution!!!!
-- Drop the RELACIONAMENTO_ALUNOS_DISCIPLINAS table first to remove dependencies
DROP TABLE RELACIONAMENTO_ALUNOS_DISCIPLINAS;
---------------------------------------------------------------------------------------------------------------------------
-- First, you must remove the Forein Key Constraint
-- Drop the foreign key constraint on DISCIPLINAS table
ALTER TABLE DISCIPLINAS
DROP CONSTRAINT fk_disc_prof;

-- Drop the foreign key constraint on ALUNOS table
ALTER TABLE ALUNOS
DROP CONSTRAINT fk_aluno_disc;
---------------------------------------------------------------------------------------------------------------------------
-- Drop the DISCIPLINAS table, as it has a foreign key constraint to PROFESSORES
DROP TABLE DISCIPLINAS;

-- Drop the PROFESSORES table
DROP TABLE PROFESSORES;

-- Finally, drop the ALUNOS table
DROP TABLE ALUNOS;